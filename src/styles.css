/* *, *::before, *::after {
  box-sizing: border-box;
} */

body {
  margin: 0;
  /* background: linear-gradient(to left, #0D1F2D, #9EA3B0); */
  background: #0D1F2D;
}

.calculator-grid {
  /* padding-top: 20px;
  padding-bottom: 20px; */
  border: 20px solid black;
  border-radius: 20px;
  background-color: black;
  display: grid;
  justify-content: center;
  margin-top: 10rem;
  grid-template-columns: repeat(4, 6rem);
  grid-template-rows:  minmax(7rem, auto) repeat(5, 6rem); /* Allowing auto enables the output div to grow the more encumbered it becomes. */
}

.calculator-grid > button {
  margin: 5px;
  cursor: pointer;
  color: white;
  font-size: 1.5rem;
  border: 1px solid white;
  border-radius: 20px;
  outline: none;
  background-color: rgba(0, 0, 0, 0.5);
}

.calculator-grid > button:hover {
  background-color: rgba(41, 33, 68, 0.5);
}

.spans-two {
  grid-column: span 2;
}

.output {
  margin: 5px;
  grid-column: 1 / -1; /* Using grid column this way allows for the entire output div to span the entire top row. */
  background-color: rgba(0, 0, 0, 0.5);
  /* border: 1px white solid; */
  display: flex;
  flex-direction: column; /* Using column as the flex direction allows the previous and current inputs to be stacked on each other. */
  align-items: flex-end;
  justify-content: space-around;
  word-wrap: break-word; /* Allows longer outputs to wrap in div as it grows. */
  word-break: break-all;
  padding: .75rem; 
}

.output .current-input input[type="text"] {
  display: flex;
  justify-content: flex-end;
  background-color: black;
  color: white;
  font-size: 1.5rem;
  border: 1px solid white;
  height: 35px;
  width: 350px;
}

/* input[type="text"] {
  background-color: black;
  color: white;
  font-size: 1.5rem;
  border: 1px solid white;
  height: 35px;
  width: 350px;
} */

/* .output .previous-input {
  color: rgba(255, 255, 255, .6);
  font-size: 1rem;
} */

